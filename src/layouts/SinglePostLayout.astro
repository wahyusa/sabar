---
import BaseLayout from "./BaseLayout.astro";
const { frontmatter } = Astro.props;
const date = new Date(frontmatter.pubDate);
const formattedDate = date.toLocaleString("en-US", {
  month: "long",
  day: "numeric",
  year: "numeric",
});
import { formatTopic } from "@/lib/topicUtils.js";
import { sortPostsByDate } from "@/lib/postUtils";
import { getCollection } from "astro:content";
import SinglePostStickySideNav from "@/components/SinglePostStickySideNav.astro";

const allPosts = await getCollection("posts");

// Get posts that belong to the same series
const seriesPosts = allPosts.filter(
  (post) => post.data.series === frontmatter.series
);
const sortedSeriesPosts = sortPostsByDate(seriesPosts);
---

<BaseLayout
  pageTitle={frontmatter.title}
  pageDescription={frontmatter.description}
  withHeader
  withFooter
>
  <main class="max-w-screen-md relative mx-auto flex flex-col mt-10">
    <div
      class="px-6 md:px-0 flex flex-col justify-center items-center text-center"
    >
      <h1
        class="scroll-m-20 text-3xl sm:text-4xl font-extrabold tracking-tight lg:text-5xl transition-colors text-balance"
      >
        {frontmatter.title}
      </h1>
      <p class="leading-7 text-sm mt-6">
        {frontmatter.author} &bull;
        {formattedDate}
      </p>
      <div class="flex leading-7 text-sm items-center space-x-2">
        <h2>Topics:</h2>
        {
          frontmatter.topics.map((topic) => (
            <p class="capitalize">
              <a class="primary-link" href={`/topics/${topic}`}>
                {formatTopic(topic)}
              </a>
            </p>
          ))
        }
      </div>
    </div>
    <div class="grid grid-cols-12 relative isolate">
      <article
        class="col-span-12 mt-6 w-full px-6 md:px-0 max-w-[65ch] mx-auto"
      >
        {
          frontmatter.series && (
            <div class="mb-8 bg-secondary p-4">
              <h2 class="text-xl font-bold mb-2">
                Series: {formatTopic(frontmatter.series)}
              </h2>
              <ul class="flex flex-col space-y-2 leading-7">
                {sortedSeriesPosts.map((post) => (
                  <li class="text-sm">
                    <a
                      class={`primary-link ${
                        Astro.url.pathname === `/posts/${post.slug}/`
                          ? " decoration-1 decoration-double underline"
                          : ""
                      }`}
                      href={`/posts/${post.slug}/`}
                    >
                      {post.data.title}
                    </a>
                  </li>
                ))}
              </ul>
            </div>
          )
        }
        <slot />
      </article>
      <!-- <SinglePostStickySideNav /> -->
    </div>
  </main>
</BaseLayout>
